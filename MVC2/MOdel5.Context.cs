//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCEntities3 : DbContext
    {
        public MVCEntities3()
            : base("name=MVCEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin_Reg> Admin_Reg { get; set; }
        public virtual DbSet<Login_Tab> Login_Tab { get; set; }
        public virtual DbSet<student> students { get; set; }
        public virtual DbSet<User_Reg> User_Reg { get; set; }
    
        public virtual int sp_adminReg(Nullable<int> aid, string ana, string aaddr, string phone, string aemail)
        {
            var aidParameter = aid.HasValue ?
                new ObjectParameter("aid", aid) :
                new ObjectParameter("aid", typeof(int));
    
            var anaParameter = ana != null ?
                new ObjectParameter("ana", ana) :
                new ObjectParameter("ana", typeof(string));
    
            var aaddrParameter = aaddr != null ?
                new ObjectParameter("aaddr", aaddr) :
                new ObjectParameter("aaddr", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var aemailParameter = aemail != null ?
                new ObjectParameter("aemail", aemail) :
                new ObjectParameter("aemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_adminReg", aidParameter, anaParameter, aaddrParameter, phoneParameter, aemailParameter);
        }
    
        public virtual int sp_DBinsert(string na, Nullable<int> ag, string addr, string una, string em, string gen, string state, string qual, string pw, string ph)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DBinsert", naParameter, agParameter, addrParameter, unaParameter, emParameter, genParameter, stateParameter, qualParameter, pwParameter, phParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_maxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_maxIdLogin");
        }
    
        public virtual int sp_stinsert(string sna, Nullable<int> sag, string saddr)
        {
            var snaParameter = sna != null ?
                new ObjectParameter("sna", sna) :
                new ObjectParameter("sna", typeof(string));
    
            var sagParameter = sag.HasValue ?
                new ObjectParameter("sag", sag) :
                new ObjectParameter("sag", typeof(int));
    
            var saddrParameter = saddr != null ?
                new ObjectParameter("saddr", saddr) :
                new ObjectParameter("saddr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_stinsert", snaParameter, sagParameter, saddrParameter);
        }
    
        public virtual int sp_login_insert(Nullable<int> rid, string una, string pw, string utype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login_insert", ridParameter, unaParameter, pwParameter, utypeParameter);
        }
    }
}
